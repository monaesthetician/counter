{"version":3,"sources":["components/CustomNum.js","components/plus.js","components/Minus.js","components/reset.js","App.js","reportWebVitals.js","index.js"],"names":["CustomNum","state","count","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","inputNum","onSubmit","this","type","onChange","className","Component","Plus","increment","onClick","id","Minus","decrement","reset","App","number","parseInt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAmCeA,E,4MAhCbC,MAAQ,CACJC,MAAM,I,EAIPC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAACH,MAAOE,EAAEE,OAAOC,S,EAKpCC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,OAC/B,EAAKG,SAAS,CAACH,MAAM,M,4CAKzB,WACI,OACI,uBAAMU,SAAYC,KAAKL,aAAvB,UACK,uBAAOM,KAAK,OAAOC,SAAUF,KAAKV,aAAcI,MAAOM,KAAKZ,MAAMC,QACnE,wBAAQc,UAAU,QAAlB,0B,GAxBQC,aCQTC,EARF,SAACR,GACV,IAAOS,EAAaT,EAAbS,UACP,OACI,8BACI,wBAAQC,QAASD,EAAWE,GAAG,OAA/B,0BCOGC,EAXD,SAACZ,GACX,IAAOa,EAAab,EAAba,UAEP,OACgB,qBAAKF,GAAG,MAAR,SACD,wBAAQD,QAASG,EAAWF,GAAG,QAA/B,0BCEJG,EAPD,SAACd,GACX,IAAOc,EAAQd,EAARc,MACP,OACQ,wBAAQR,UAAU,QAAQK,GAAG,QAAQD,QAASI,EAA9C,uBC4DGC,E,kDAzDb,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAOVS,UAAY,WACR,EAAKd,SAAS,CAAEH,MAAO,EAAKD,MAAMC,MAAQ,KAT3B,EAYnBqB,UAAY,WACR,EAAKlB,SAAS,CAAEH,MAAO,EAAKD,MAAMC,MAAQ,KAb3B,EAgBnBsB,MAAQ,WACN,EAAKnB,SAAS,CAAEH,MAAO,KAjBN,EAoBnBS,SAAW,SAACe,GACV,IAAInB,EAAQoB,SAASD,GACrB,EAAKrB,SAAS,CAACH,MAAO,EAAKD,MAAMC,MAAQK,KApBvC,EAAKN,MAAQ,CACTC,MAAO,GAHI,E,0CA0BnB,WACI,OACI,sBAAKc,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACK,qBAAIK,GAAG,cAAP,gDAAyDR,KAAKZ,MAAMC,WAGzE,sBAAKc,UAAU,YAAYK,GAAG,mBAA9B,UACI,cAAC,EAAD,CAAMF,UAAWN,KAAKM,YACtB,cAAC,EAAD,CAAOI,UAAWV,KAAKU,eAQvB,cAAC,EAAD,CAAOC,MAAOX,KAAKW,QACnB,qBAAKR,UAAU,QAAf,SAGA,cAAC,EAAD,CAAWL,SAAUE,KAAKF,oB,GAhDxBM,aCKHW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.62019e11.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass CustomNum extends Component {\r\n  state = {\r\n      count:''\r\n  }\r\n\r\n  \r\n     handleChange = (e) => {\r\n         this.setState({count: e.target.value})\r\n     }\r\n         \r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.inputNum(this.state.count)\r\n        this.setState({count:''})\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit= { this.handleSubmit }>\r\n                 <input type=\"text\" onChange={this.handleChange} value={this.state.count} />\r\n                <button className=\"input\">Input</button>\r\n                \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default CustomNum;","import React from 'react'\r\n\r\nconst Plus = (props) => {\r\n    const {increment} = props\r\n    return (\r\n        <div>\r\n            <button onClick={increment} id='plus'>WELCOME +</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Plus","import React from 'react'\r\n\r\nconst Minus = (props) => {\r\n    const {decrement} = props\r\n    \r\n    return (\r\n                    <div id='sub'>\r\n                   <button onClick={decrement} id='minus'>Goodbye -</button>\r\n                    </div>\r\n     \r\n    )\r\n}\r\n\r\nexport default Minus;\r\n\r\n","import React from 'react'\r\n\r\nconst reset = (props) => {\r\n    const {reset} =props\r\n    return (\r\n            <button className=\"reset\" id='reset' onClick={reset}>Reset me</button>\r\n    )\r\n}\r\n\r\nexport default reset\r\n","import './index.css';\nimport React, {Component} from 'react';\nimport CustomNum from \"./components/CustomNum\";\nimport Plus from './components/plus';\nimport Minus from './components/Minus';\nimport Reset from './components/reset';\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          count: 0\n\n      }\n  }\n \n  increment = () => {\n      this.setState({ count: this.state.count + 1 });\n  }\n\n  decrement = () => {\n      this.setState({ count: this.state.count - 1 });\n  }\n  \n  reset = () => {\n    this.setState({ count: 0});\n  }\n\n  inputNum = (number) =>{ \n    let value = parseInt(number)\n    this.setState({count: this.state.count + value}\n    )\n  }\n  \n  render() {\n      return (\n          <div className=\"App\">\n            <div className=\"container\" >\n                 <h1 id='white-count'>Current number of people in store: {this.state.count}</h1>     \n            </div>\n            \n            <div className=\"container\" id=\"button-container\">\n                <Plus increment={this.increment} />\n                <Minus decrement={this.decrement} />  \n            </div> \n              \n            {/* <div className=\"container\" id=\"reset-button\">\n             \n            </div> */}\n                \n\n                <Reset reset={this.reset}/>\n                <div className=\"input\"> \n            \n        \n                <CustomNum inputNum={this.inputNum}/>               \n            </div>\n            \n\n          </div>\n      );\n  }\n}\n\n\nexport default App;\n\n\n          \n        \n  \n      \n     ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}